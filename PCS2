import groovy.json.JsonOutput

def passwordHandler(String input) {
    StringBuilder result = new StringBuilder()
    for (int i = 0; i < input.length(); i++) {
        if (input.charAt(i) == '%') {
            result.append('%')
        }
        result.append(input.charAt(i))
    }
    return result.toString()
}

def Update_details(instance_selected) {
    if (instance_selected.equals("DEV")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.DEV_URL
    }
}

pipeline {
    agent any

    environment {
        DEV_Creds = credentials('DEV_CredID')
    }

    parameters {
        booleanParam(name: 'Deactivate_Application', defaultValue: false, description: 'Check the box to deactivate the application')
        string(name: 'Application_ID', defaultValue: '', description: 'Enter the application ID', trim: true, visible: false)
        string(name: 'Deactivate_Application_Version', defaultValue: '', description: 'Enter the deactivation version', trim: true, visible: false)
    }

    stages {
        stage('Import Process Application') {
            steps {
                script {
                    Update_details((params.InstanceURL).toString())
                    bat """
                        curl --location "${env.serviceURL}/ic/api/process/v1/targets/ORACLEINTERNALPCS" \
                        --header "Accept: application/json" \
                        --user ${env.USR}:${passwordHandler(env.PSW)} \
                        --form "restDeployConfig={\\\"revisionId\\\": \\\"${params.Application_Version}\\\"}" \
                        --form "exp=@\\\"${params.Application_File}\\\""
                    """
                }
            }
        }

        stage('Deactivate Previous Application') {
            when {
                expression { params.Deactivate_Application }
            }
            steps {
                script {
                    echo 'Checkbox is checked'
                    Update_details((params.InstanceURL).toString())
                    withCredentials([usernamePassword(credentialsId: 'DEV_CredID', passwordVariable: 'PSW', usernameVariable: 'USR')]) {
                        input {
                            message 'Please provide the following details'
                            string(name: 'Application_ID', defaultValue: '', description: 'Enter the application ID', trim: true)
                            string(name: 'Deactivate_Application_Version', defaultValue: '', description: 'Enter the deactivation version', trim: true)
                        }
                        def deployIntegCmd = "curl -X PATCH \"${env.serviceURL}/ic/api/process/v1/targets/ORACLEINTERNALPCS/projects/${params.Application_ID}/revisions/${params.Deactivate_Application_Version}\" --user \"${USR}:${passwordHandler(PSW)}\" --header \"Content-Type: application/json\" --data ${JsonOutput.toJson([state: 'OFF', mode: 'RETIRED'])}"
                        bat(deployIntegCmd)
                        echo "Deactivated"
                    }
                }
            }
        }
    }
}
