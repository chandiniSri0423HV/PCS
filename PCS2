def passwordHandler(String input) {
   StringBuilder result = new StringBuilder()
   for (int i = 0; i < input.length(); i++) {
       if (input.charAt(i) == '%') {
           result.append('%')
       }
       result.append(input.charAt(i))
   }
   return result.toString()
}
def Update_details(instance_selected) {
    if (instance_selected.equals("DEV")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.DEV_URL
    }
}
pipeline {
    agent any
	environment {
        DEV_Creds = credentials('DEV_CredID')
    }
    stages {
        stage('Import Process Application') {
            steps {
                script {
                    Update_details((params.InstanceURL).toString())
                    //echo "${env.serviceURL}"
                    bat """
                        curl --location "${env.serviceURL}/ic/api/process/v1/targets/ORACLEINTERNALPCS" \
                        --header "Accept: application/json" \
                        --user ${env.USR}:${env.PSW} \
                        --form "restDeployConfig={\\"revisionId\\": \\"${params.Application_Version}\\"}" \
                        --form "exp=@\\"${params.Application_File}\\""
                    """
                }
            }
        }   
	stage('Deactivate Previous Application') {
            steps {
                script {
                    bat """
                        curl --location --request PATCH '${env.serviceURL}/ic/api/process/v1/targets/ORACLEINTERNALPCS/projects/"${params.Application_ID}/revisions/"${params.Deactivate_Application_Version}' \
						--user ${env.USR}:${env.PSW} \
						--header 'Content-Type: application/json' \
						--data '{
									"state": "OFF",
									"mode": "RETIRED"
								}'
                    """
                }
            }
        }
    }
}
